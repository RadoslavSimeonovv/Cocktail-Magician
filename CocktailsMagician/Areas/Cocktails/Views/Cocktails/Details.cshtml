@model CocktailsMagician.Areas.Cocktails.Models.CocktailViewModel

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var reviews = (IEnumerable<CocktailsMagician.Areas.Cocktails.Models.CocktailReviewViewModel>)ViewBag.Reviews;
    var ratingSum = ViewBag.RatingSum;
    var ratingCount = ViewBag.RatingCount;
    var reviewLikes = ViewBag.UserReviewLikes;

    decimal rating = 0;
    if (ratingCount > 0)
    {
        rating = (ratingSum / ratingCount);
    }
    var totalRating = decimal.Parse(rating.ToString());
}

<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

<head>
    <style>
        input[readonly] {
            border: none;
            background: none;
            color: darkgrey;
        }
    </style>
    <style>
        .greenColor {
            color: green;
        }
    </style>
    <style>
        .modal {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }
    </style>
</head>



<h1>Details</h1>
<div>
    <span class="starFadeN" id="sRate1"></span><span class="starFadeN" id="sRate2"></span><span class="starFadeN" id="sRate3"></span><span class="starFadeN" id="sRate4"></span><span class="starFadeN" id="sRate5"></span>
</div>


<div>
    <h4>Cocktail</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        @if (User.IsInRole("Admin"))
        {
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.UnlistedOn)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.UnlistedOn)
        </dd>
        }
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CocktailIngredients)
        </dt>
        <dd class="col-sm-10">
            @{
                await Html.RenderPartialAsync("_ListCI", Model.CocktailIngredients);
            }
        </dd>

    </dl>
</div>
<div>
    @if (User.IsInRole("Admin"))
    {
        <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
    }
    <a asp-action="Index">Back to List</a>
</div>
<br />

@if (User.IsInRole("Admin") || User.IsInRole("User"))
{
    <div>
        <!-- Button trigger modal -->
        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#newReviewModal">
            Add Review
        </button>
    </div>
}



@if (reviews.Count() != 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                </th>
                <th>
                    Rating
                </th>
                <th>
                    Review
                </th>
                <th>
                    Username
                </th>
                <th>
                    Reviewed On
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var c in reviews)
            {
                <tr class="crId">
                    <td>
                        <input type="hidden" id="cocktailReviewId" asp-for="@c.Id" class="form-control" readonly />
                    </td>
                    <td>
                        @for (var i = 1; i <= c.Rating; i++)
                        {
                            <span class="starGlowN"></span>
                        }
                        @for (var i = (c.Rating + 1); i <= 5; i++)
                        {
                            <span class="starFadeN"></span>
                        }
                        <br />
                        <button id="thumbsUpButton" data-id="@c.Id" data-liked="@c.IsLiked" type="button" class="btn btn-default btn-sm">
                            @if (c.IsLiked)
                            {
                                <span id="likedSpan" class="greenColor glyphicon glyphicon-thumbs-up"> Liked </span>
                            }
                            else
                            {
                                <span class="glyphicon glyphicon-thumbs-up"> Like </span>
                            }
                        </button>
                        <span id="likes-@c.Id" data-num="@c.NumberOfLikes" value="@c.NumberOfLikes" readonly> @c.NumberOfLikes </span>
                    </td>
                    <td>
                        @Html.Raw(c.Comment.Replace("\n", "<br />"))
                    </td>
                    <td>
                        <input type="text" value=" @c.UserName" readonly>
                    </td>
                    <td>
                        <input type="text" value=" @c.ReviewedOn" readonly>
                    </td>
                </tr>

            }
        </tbody>
    </table>
}
else
{

    <center> <h5> No Reviews for this cocktail! </h5> </center>

}

<script>
    function SCRate() {
        for (var i = 1; i <= @totalRating; i++) {
            $("#sRate" + i).attr('class', 'starGlowN');
        }
    }
    $(function(){
        SCRate();
    });

    var input = $(":button")
    input.click(function () {
            
        var $button = $(this);
                   console.log($button);
            var buttonId = $button.data('id');
            var divCount = $('#likes-' + buttonId);
            var divText = divCount.text();
            //console.log(divText);
            var likeCount = parseInt(divCount.text());
            debugger;
            var likedAttr = $(this).attr("data-liked");
            var likedSpan = 'greenColor glyphicon glyphicon-thumbs-up';
            var defaultSpan = 'glyphicon glyphicon-thumbs-up';
            var isLiked = likedAttr === "true";
        var span = $button.children().first();
      
            //var cReviewId = $button.closest('td').attr("id");
            var cReviewId = $button.closest($(".crId")).children().eq(0).children().eq(0).val();

        if (span.attr('id')) {
            debugger;
            likeCount = likeCount - 1;
            //console.log(likeCount);
                isLiked = false;             
                $button.attr("data-liked", "false");
                span.attr('class', defaultSpan);
                span.text(' Like');
                span.removeAttr('id');
                divCount.text(likeCount);
                }
                else {
            likeCount = likeCount + 1;
             //console.log(likeCount);
                isLiked = true;
                $button.attr("data-liked", "true");
                span.attr('class', likedSpan);
                span.text(' Liked');
                span.attr('id', buttonId);
                divCount.text(likeCount);
                }

            $.ajax({
                type: "POST",
                url: "@Url.Action("LikeReview","CocktailReviews",new { area = "Cocktails" })",
                data: { cocktailReviewId: cReviewId, IsLiked: isLiked },
                dataType: "json",
            });
    });
</script>


<!-- Modal -->
<div class="modal fade modal-xl" id="newReviewModal" tabindex="-1" role="dialog" aria-labelledby="exampleModal3Label" aria-hidden="true" data-keyboard="false">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModal3Label">Review</h5>
                <button id="close" type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="form-container">
                @{
                    await Html.RenderPartialAsync("_CommentRating");
                }
            </div>
        </div>
    </div>
</div>

<script>
    //TODO
    $('#newReviewModal').on('hidden.bs.modal', function () {
        $(this).removeData('bs.modal');
    });
</script>
