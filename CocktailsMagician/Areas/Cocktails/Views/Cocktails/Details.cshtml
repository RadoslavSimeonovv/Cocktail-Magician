@model CocktailsMagician.Areas.Cocktails.Models.CocktailViewModel

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var reviews = (IEnumerable<CocktailsMagician.Areas.Cocktails.Models.CocktailReviewViewModel>)ViewBag.Reviews;
    var ratingSum = ViewBag.RatingSum;
    var ratingCount = ViewBag.RatingCount;

    decimal rating = 0;
    if (ratingCount > 0)
    {
        rating = (ratingSum / ratingCount);
    }
    var totalRating = decimal.Parse(rating.ToString());
}



<meta name="viewport" content="width=device-width, initial-scale=1">
@*<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">*@
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>


<h1>Details</h1>
<div>
    <span class="starFadeN" id="sRate1"></span><span class="starFadeN" id="sRate2"></span><span class="starFadeN" id="sRate3"></span><span class="starFadeN" id="sRate4"></span><span class="starFadeN" id="sRate5"></span>
</div>


<div>
    <h4>Cocktail</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.UnlistedOn)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.UnlistedOn)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.AvgRating)
        </dt>
        <dd class="col-sm-10">
            @if (Model.AvgRating == 0)
            {
                <text>Not rated yet</text>
            }
            else
            {
                @Html.DisplayFor(model => model.AvgRating)
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CocktailIngredients)
        </dt>
        <dd class="col-sm-10">
            @{
                await Html.RenderPartialAsync("_ListCI", Model.CocktailIngredients);
            }
        </dd>

    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

@foreach (var c in reviews)
{
    <hr />
    <div class="row">
        <div class="col-md-3">
            <br />
            @for (var i = 1; i <= c.Rating; i++)
            {
                <span class="starGlowN"></span>
            }
            @for (var i = (c.Rating + 1); i <= 5; i++)
            {
                <span class="starFadeN"></span>
            }
        </div>
        <div class="col-md-9">
            @Html.Raw(c.Comment.Replace("\n", "<br />"))
        </div>
    </div>
}
<hr />
@{
    await Html.RenderPartialAsync("_CommentRating");
}

<script>
    function SCRate() {
        for (var i = 1; i <= @totalRating; i++) {
            $("#sRate" + i).attr('class', 'starGlowN');
        }
    }
    $(function(){
        SCRate();
    });
</script>


